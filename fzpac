#!/bin/bash

readonly THIS_CMD="${0##*/}"
readonly VERSION='1.0.0'

_help() {
	cat <<EOF
$THIS_CMD -- pacman package finder with fzf

USAGE
    $THIS_CMD SUBCMD KEYWORDS...

SUBCMD
    s, search        Search all available packages and select.
    q, search-local  Search installed packages and select.
    i, info          Search all available packages,
                     and show detail information that you selected.
    l, info-local    Search installed packages,
                     and show detail information that you selected.
    S, install       Select packages and install that you selected.
    R, remove        Select packages and uninstall that you selected.
    h, help          Show this usage.
EOF
}

_version() {
    echo "$THIS_CMD -- Version $VERSION"
}

_main() {
	if [[ $# -lt 1 ]]; then
		_help
		exit 0
	fi

	for arg in "$@"; do
		case "$arg" in
		s | search)
			shift
			_select_available_pkgs "$@"
			break
			;;
		q | search-local)
			shift
			_select_local_pkgs "$@"
			break
			;;
		i | info)
			shift
			_select_available_pkgs "$@" | xargs -ro pacman -Sii
			break
			;;
		l | info-local)
			shift
			_select_local_pkgs "$@" | xargs -ro pacman -Qii
			break
			;;
		S | install)
			shift
			_select_available_pkgs "$@" | xargs -ro sudo pacman -S
			break
			;;
		R | remove)
			shift
			_select_local_pkgs "$@" | xargs -ro sudo pacman -Rn
			break
			;;
		h | -h | help | --help)
			_help
			break
			;;
        version | --version)
            _version
            break
            ;;
		*)
			_err "Invalid sub command: $1"
			return 1
			;;
		esac
	done
}

_err() {
	echo -e "[ \e[31mERR\e[m ] $*" >&2
}

_select_available_pkgs() {
	pacman -Ssq "$@" |
		fzf --multi \
			--preview 'cat <(pacman -Si {1}) <(pacman -Fl {1} | awk "{print \$2}")'
}

_select_local_pkgs() {
	pacman -Qsq "$@" |
		fzf --multi \
			--preview 'pacman -Qil {}'
}

_main "$@"
exit $?
